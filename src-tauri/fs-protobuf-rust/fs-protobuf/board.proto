syntax = "proto3";

package mcfs.board;

/**
 * A unique identifier for a channel
 * A channel is an individual hardware element that can be controlled
 * For example, a single GPIO
 *
 * | Field        | Description                                                |
 * |--------------|------------------------------------------------------------|
 * | board_id     | The board the channel belongs to                           |
 * | channel_type | The channel type                                           |
 * | channel      | The channel number                                         |
 */
message ChannelIdentifier {
    uint32 board_id = 1;
    ChannelType channel_type = 2;
    uint32 channel = 3;
}

/** 
 * The type of channel
 */  
enum ChannelType {
    GPIO = 0;
    LED = 1;
    RAIL_3V3 = 2;
    RAIL_5V = 3;
    RAIL_5V5 = 4;
    RAIL_24V = 5;
    CURRENT_LOOP = 6;
    DIFFERENTIAL_SIGNAL = 7;
    TC = 8;
    RTD = 9;
    VALVE = 10;
    VALVE_CURRENT = 11;
    VALVE_VOLTAGE = 12;
}

/** 
 * A physical state a valve can be in
 */
enum ValveState {
    VALVE_OPEN = 0;
    VALVE_CLOSED = 1;
}

/**
 * The state an LED can be in
 */
enum LEDState {
    LED_OFF = 0;
    LED_ON = 1;
}

/**
 * Functional board type
 */
enum BoardType {
    SERVER = 0;
    FLIGHT_COMPUTER = 1;
    GROUND_COMPUTER = 2;
    SAM = 3;
}